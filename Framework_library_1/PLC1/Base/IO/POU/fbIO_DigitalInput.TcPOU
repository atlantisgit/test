<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="fbIO_DigitalInput" Id="{7bbb57fe-5d2d-459e-bc69-663c3558574f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK fbIO_DigitalInput
VAR_INPUT
	iInMode:INT;				(*global mode input 0=stop, 1=Auto, 2=Manuall,10=Independant*)
	bInInput:BOOL; 				(*The raw digital input signal*)
	tInOnDebounce:TIME:=T#0MS;	(*Optional debounce timer for rising edge of input (T#0ms to disable)*)
	tInOffDebounce:TIME:=T#0MS;	(*Optional debounce timer for falling edge of input (T#0ms to disable)*)
END_VAR
VAR_OUTPUT
	bOutAuto:BOOL;		  (* Block in auto mode*)
	bOutOn:BOOL;		  (*The status of the digital input*)
	bOutRisingEdge:BOOL;  (*The status of the input transitioned FROM low TO high. TRUE FOR exactly 1 scan*)
	bOutFallingEdge:BOOL; (*The status of the input transitioned FROM high TO low. TRUE FOR exactly 1 scan*)
END_VAR

VAR_IN_OUT
	HMI_DigitalInput:stHMI_DigitalInput;
END_VAR

VAR
	tonInOnDebounce:TON;
	tofInOnDebounce:TOF;
	rTrigbInput:R_TRIG;
	fTrigbInput:F_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*debounce logic - output read after debounce  time*)
tonInOnDebounce(IN:=bInInput, PT:=tInOnDebounce, );
tofInOnDebounce(IN:=bInInput , PT:=tInOffDebounce );

(*map edge triggered outputs*)
rTrigbInput(CLK:=bInInput , Q=>bOutRisingEdge );
fTrigbInput(CLK:=bInInput , Q=>bOutFallingEdge );

(*control bOut based on the global input and HMI input mode*)
(*if in independant mode allow control of the output based on HMI commands (MANUAL) AND digital input (AUTO)*)
IF iInMode=10 THEN
	//if HMI requests manual mode 
	IF HMI_DigitalInput.iMode=2 THEN
		IF HMI_DigitalInput.bPBEN_On AND HMI_DigitalInput.bPB_On THEN
			bOutOn:=1;
		ELSIF HMI_DigitalInput.bPBEN_Off AND HMI_DigitalInput.bPB_Off THEN
			bOutOn:=0;
		END_IF
	ELSE
		bOutOn:=tonInOnDebounce.Q OR tofInOnDebounce.Q;   /// auto output
	END_IF
ELSE
	bOutOn:=tonInOnDebounce.Q OR tofInOnDebounce.Q;
END_IF

(*map auto status output*)
bOutAuto:=(iInMode<>2) AND (HMI_DigitalInput.iMode<>2);

(*map HMI_DigitalInput outputs*)
HMI_DigitalInput.bOnActual:=tofInOnDebounce.Q OR tonInOnDebounce.Q;
HMI_DigitalInput.bOn:=bOutOn;

]]></ST>
    </Implementation>
    <LineIds Name="fbIO_DigitalInput">
      <LineId Id="37" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="35" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="98" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="107" Count="6" />
      <LineId Id="100" Count="0" />
      <LineId Id="120" Count="1" />
      <LineId Id="101" Count="0" />
      <LineId Id="114" Count="1" />
      <LineId Id="123" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="61" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>